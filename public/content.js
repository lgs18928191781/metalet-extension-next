(function(){"use strict";const f=(e=32)=>{let t="";const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<e;i++)t+=n.charAt(Math.floor(Math.random()*n.length));return t};async function p(e,t="authorize",n){const i=`${t}-${e}`,d=f(16),C=window.location.host;window.postMessage({nonce:d,channel:"to-metaidwallet",action:i,host:C,icon:"",params:n||{}},"*");const k=a=>{const l=c=>{if(!(c.source!==window||c.data?.channel!=="from-metaidwallet")){if(c.data?.nonce===d){if(window.removeEventListener("message",l),c.data?.res?.error)throw new Error(c.data.res.error);a&&typeof a=="function"&&a(c.data)}return!0}};window.addEventListener("message",l)};return await new Promise(a=>{k(l=>{a(l.res)})})}function s(e){return()=>import(`../lib/actions/${e.toLowerCase()}`).then(t=>t.process)}function u(e){return()=>import(`../lib/actions/${e.toLowerCase()}`).then(t=>t.estimate)}function r(){}const h={Connect:{name:"Connect",title:"Connect",description:"Connect",process:()=>s("connect"),estimate:r,closeAfterProcess:!0},Disconnect:{name:"Disconnect",title:"Disconnect",description:"Disconnect",process:s("disconnect"),estimate:r,closeAfterProcess:!0},SwitchNetwork:{name:"SwitchNetwork",title:"SwitchNetwork",description:"SwitchNetwork",process:s("switch-network"),estimate:r,closeAfterProcess:!0},TokenTransfer:{name:"TokenTransfer",title:"Token Transfer",description:"Transfer tokens from my wallet to another",process:s("transfer-token"),estimate:u("transfer-token"),closeAfterProcess:!1},Transfer:{name:"Transfer",title:"Transfer",description:"Transfer tokens from my wallet to another",process:s("transfer"),estimate:r,closeAfterProcess:!1},Merge:{name:"Merge",title:"Merge",description:"Merge all the UTXOs into one in my wallet",process:s("merge"),estimate:r,closeAfterProcess:!1},SignTransaction:{name:"Sign a Transaction",title:"Sign a Transaction",description:["Sign a transaction with my wallet"],process:s("sign-transaction"),estimate:r,closeAfterProcess:!0},EciesEncrypt:{name:"ECIES Encrypt",title:"ECIES Encrypt",description:"Encrypt a message with ECIES algorithm",process:s("ecies-encrypt"),estimate:r,closeAfterProcess:!0},EciesDecrypt:{name:"ECIES Decrypt",title:"ECIES Decrypt",description:["Decrypt an encrypted message with ECIES algorithm"],process:s("ecies-decrypt"),estimate:r,closeAfterProcess:!0}},g=Object.keys(h);function o(e){return()=>import(`../lib/actions/${e.toLowerCase()}`).then(t=>t.process)}const y={IsConnected:{process:()=>o("is-connected")},GetNetwork:{process:o("get-network")},GetAddress:{process:o("get-address")},GetPublicKey:{process:o("get-public-key")},GetBalance:{process:o("get-balance")},GetTokenBalance:{process:o("token/get-balance")},GetXPublicKey:{process:o("get-extended-public-key")}},E=Object.keys(y),m={},w=e=>e.charAt(0).toLowerCase()+e.slice(1);E.forEach(e=>{const t=w(e);m[t]=async n=>await p(e,"query",n)}),g.forEach(e=>{const t=w(e);m[t]=async n=>await p(e,"authorize",n)}),window.metaidwallet=m})();
